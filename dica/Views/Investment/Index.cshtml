@model dica.Models.InvestmentSearchViewModel
@using dica.Repositories
@using PagedList.Mvc;
@{
ViewBag.Title = "Investment List";
}
<p>
    @*@Html.ActionLink("Create New", "Create")*@
</p>
@*@using (Html.BeginForm("Index", "Investment", FormMethod.Get, new { @class= "navbar-form navbar-search" }))*@
@*{*@
    <div class="panel panel-default panel-table animated fadeInDown">
        <div class="panel-heading">
            <div class="row">
                <div class="col col-xs-6">
                    <h3 class="panel-title">Investment List</h3>
                </div>
                <div class="col col-xs-6 text-right">
                    
                    <button type="button" class="btn btn-primary btn-create" onclick="location.href='@Url.Action("Create", "Investment")'">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        <span class="label-icon">Create New</span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <nav >
                <div >
                    @using (Html.BeginForm("Index", "Investment", FormMethod.Get, new { @class = "form-inline navbar-form navbar-search" }))
                    {
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.TypeOfInvestment, new SelectList(StatusRepository.GetStatusByGroup("TypeOfInvestment"), "Value", "Name"), "Type of Investment", new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.Sector, new SelectList(StatusRepository.GetStatusByGroup("Sector"), "Value", "Name"), "Sector", new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.InvestingCountry, new SelectList(CountryRepository.GetCountries(), "ISO", "Name"), "Investing Country", new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(model => model.CompanyNameinMyanmar, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Name" } })
                                
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(model => model.InvestorName, new { htmlAttributes = new { @class = "form-control", placeholder = "Investor Name" } })
                                
                            </div>
                            <div class="form-group">
                                <button type="submit" class="btn btn-search btn-info">
                                    <span class="glyphicon glyphicon-search"></span>
                                    <span class="label-icon">Search</span>
                                </button>
                            </div>
                                }
                </div>
            </nav>
            <table class="table table-striped table-bordered table-list">
                <thead>
                    <tr>
                        <th width="1%">
                            #
                        </th>
                        <th width="25%">
                            @Html.DisplayNameFor(model => model.SearchResults[0].CompanyNameinMyanmar)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResults[0].InvestorName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResults[0].InvestingCountry)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResults[0].Sector)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResults[0].InvestmentPermittedAddress.State)
                        </th>                        
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResults[0].FormofInvestment)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResults[0].TotalAmountofCapital)
                        </th>
                        <th><em class="fa fa-cog"></em></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var rowNo = 1;
                        foreach (var item in Model.SearchResults)
                        {
                            <tr>
                                <td width="1%">
                                    @Html.DisplayFor(model => rowNo)
                                </td>
                                <td width="25%">
                                    @Html.DisplayFor(modelItem => item.CompanyNameinMyanmar)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InvestorName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InvestingCountry)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Sector)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InvestmentPermittedAddress.State)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FormofInvestment)
                                </td>
                                <td style="text-align:right" width="8%">
                                    @Html.DisplayFor(modelItem => item.TotalAmountofCapital) (@Html.DisplayFor(modelItem => item.CapitalCurrency))
                                </td>
                                <td align="center" style="width: 170px;">
                                    <div class='btn-group pull-right'>
                                        <a class="btn btn-primary" title="Add Attachment" href="#" onclick="location.href='@Url.Action("Index", "Attachment", new { id = item.UID })'"><em class="fa fa-paperclip"></em></a>
                                        <a class="btn btn-info" title="Investment Details" href="#" onclick="location.href='@Url.Action("Details", "Investment", new { id = item.UID })'"><em class="fa fa-list"></em></a>
                                        <a class="btn btn-default" title="Edit Investment" href="#" onclick="location.href='@Url.Action("Edit", "Investment", new { id = item.UID })'"><em class="fa fa-pencil"></em></a>
                                        <a class="btn btn-danger" title="Delete Investment" href="#" onclick="location.href='@Url.Action("Delete", "Investment", new { id = item.UID })'"><em class="fa fa-trash"></em></a>
                                    </div>
                                </td>
                            </tr>
                            rowNo++;
                        }
                    }
                    
                </tbody>
            </table>
        </div>
        <div class="panel-footer">
            <div class="row">
                <div class="text-center">
                    @Html.PagedListPager(Model.SearchResults,
           page => Url.Action("Index", new RouteValueDictionary()
           {
                { "Page", page },
                { "TypeOfInvestment", Model.TypeOfInvestment },
                { "Sector", Model.Sector},
               { "InvestingCountry", Model.InvestingCountry },
               { "CompanyNameinMyanmar", Model.CompanyNameinMyanmar },
               { "InvestorName", Model.InvestorName }
           }),
         PagedListRenderOptions.ClassicPlusFirstAndLast)
                </div>
                </div>
        </div>
    </div>
@*}*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        //$(document).ready(function () {
        //    $('#myTable').dataTable();
        //});
    </script>
}

