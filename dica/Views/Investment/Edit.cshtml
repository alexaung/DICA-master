@model dica.Models.InvestmentViewModel
@using dica.Repositories;

@using (Html.BeginForm())
{
    <p>
        @*@Html.ActionLink("Create New", "Create")*@
    </p>
    @Html.AntiForgeryToken()   
    

    <div class="panel panel-default panel-table">
        <div class="panel-heading">
            <div class="row">
                <div class="col col-xs-6">
                    <h3 class="panel-title">Edit Investment</h3>
                </div>
                @*<div class="col col-xs-6 text-right">
                    <button type="button" class="btn btn-sm btn-primary btn-create" onclick="location.href='@Url.Action("Create", "Investment")'">Create New</button>
                </div>*@
            </div>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                @*<h3>Edit Investment</h3>
                <hr />*@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UID)

                <fieldset class="fsStyle">
                    <legend class="legendStyle">Investor/Promoter</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestorName, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InvestorName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.InvestorName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Citizenship, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Citizenship, new SelectList(CountryRepository.GetCountries(), "ISO", "Name"), "Please select Citizenship", new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true" })
                            @Html.ValidationMessageFor(model => model.Citizenship, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(model => model.InvestorAddress.UID)
                        @Html.LabelFor(model => model.InvestorAddress.Line1Address, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.InvestorAddress.Line1Address, new {@class = "form-control", cols = 60, rows = 4})
                            @Html.ValidationMessageFor(model => model.InvestorAddress.Line1Address, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    @*<div class="form-group">
                @Html.LabelFor(model => model.InvestorAddress.Line2Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InvestorAddress.Line2Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvestorAddress.Line2Address, "", new { @class = "text-danger" })
                </div>
            </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestorAddress.City, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InvestorAddress.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.InvestorAddress.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestorAddress.State, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InvestorAddress.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.InvestorAddress.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestorAddress.Country, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.InvestorAddress.Country, new SelectList(CountryRepository.GetCountries(), "ISO", "Name"), "Please select Country", new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true" })
                            @Html.ValidationMessageFor(model => model.InvestorAddress.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset>
                    <legend>Principal Organization</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OrganizationName, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OrganizationName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrganizationName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(model => model.OrganizationAddress.UID)
                        @Html.LabelFor(model => model.OrganizationAddress.Line1Address, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.OrganizationAddress.Line1Address, new {@class = "form-control", cols = 60, rows = 4})
                            @Html.ValidationMessageFor(model => model.OrganizationAddress.Line1Address, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    @*<div class="form-group">
                @Html.LabelFor(model => model.OrganizationAddress.Line2Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrganizationAddress.Line2Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrganizationAddress.Line2Address, "", new { @class = "text-danger" })
                </div>
            </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.OrganizationAddress.City, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OrganizationAddress.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrganizationAddress.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OrganizationAddress.State, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OrganizationAddress.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrganizationAddress.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OrganizationAddress.Country, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.OrganizationAddress.Country, new SelectList(CountryRepository.GetCountries(), "ISO", "Name"), "Please select Country", new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true" })
                            @Html.ValidationMessageFor(model => model.OrganizationAddress.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IncorporationPlace, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IncorporationPlace, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IncorporationPlace, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </fieldset>

                <fieldset>
                    <legend>Investment Details</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyNameinMyanmar, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyNameinMyanmar, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyNameinMyanmar, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PermitNo, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PermitNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PermitNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PermitDate, new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            <div class='input-group date' id="datetimepicker">
                                @Html.TextBoxFor(model => model.PermitDate, new { @class = "form-control" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.PermitDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Sector, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Sector, new SelectList(StatusRepository.GetStatusByGroup("Sector"), "Value", "Name"), "Please select Sector", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Sector, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessType, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.BusinessType, new { @class = "form-control", cols = 60, rows = 4 })
                            @Html.ValidationMessageFor(model => model.BusinessType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.HiddenFor(model => model.InvestmentPermittedAddress.UID)
                        @Html.LabelFor(model => model.InvestmentPermittedAddress.Line1Address, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.InvestmentPermittedAddress.Line1Address, new {@class = "form-control", cols = 60, rows = 4})
                            @Html.ValidationMessageFor(model => model.InvestmentPermittedAddress.Line1Address, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    @*<div class="form-group">
                @Html.LabelFor(model => model.InvestmentPermittedAddress.Line2Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InvestmentPermittedAddress.Line2Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvestmentPermittedAddress.Line2Address, "", new { @class = "text-danger" })
                </div>
            </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestmentPermittedAddress.City, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InvestmentPermittedAddress.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.InvestmentPermittedAddress.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestmentPermittedAddress.State, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InvestmentPermittedAddress.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.InvestmentPermittedAddress.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestmentPermittedAddress.Country, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.InvestmentPermittedAddress.Country, new SelectList(CountryRepository.GetCountries(), "ISO", "Name"), "Please select Country", new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true" })
                            @Html.ValidationMessageFor(model => model.InvestmentPermittedAddress.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AmountofForeignCapital, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AmountofForeignCapital, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AmountofForeignCapital, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TotalAmountofCapitalInKyat, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TotalAmountofCapitalInKyat, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TotalAmountofCapitalInKyat, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PeriodforForeignCapitalBroughtin, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PeriodforForeignCapitalBroughtin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PeriodforForeignCapitalBroughtin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConstructionPeriod, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConstructionPeriod, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConstructionPeriod, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ValidityofInvestmentPermit, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ValidityofInvestmentPermit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ValidityofInvestmentPermit, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FormofInvestment, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.FormofInvestment, new SelectList(StatusRepository.GetStatusByGroup("FormOfInvestment"), "Value", "Name"), "Please select Form of Investment", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FormofInvestment, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </fieldset>

                @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>*@
            </div>

        </div>
        <div class="panel-footer">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Index", "Investment")'">Back to List</button>
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div> 
                    
                </div>
            </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
