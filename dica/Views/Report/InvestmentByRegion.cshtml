@model dica.Models.InvestmentByRegionViewModel
@using dica.Repositories
@using PagedList.Mvc;
@{
    ViewBag.Title = "Investment Report By Region";
}
<p>
    @*@Html.ActionLink("Create New", "Create")*@
</p>

<div class="panel panel-default panel-table animated fadeInDown">
    <div class="panel-heading">
        <div class="row">
            <div class="col col-xs-6">
                <h3 class="panel-title">Investment Report By Region</h3>
            </div>            
        </div>
    </div>
    <div class="panel-body" style='overflow-y:auto'>
        <nav class="navbar navbar-default">
            <div class="nav nav-justified navbar-nav">
                @using (Html.BeginForm("InvestmentByRegion", "Report", FormMethod.Get, new { @class = "form-inline navbar-form navbar-search" }))
                {

                <div class="form-group">
                    @Html.DropDownListFor(model => model.TypeOfInvestment, new SelectList(StatusRepository.GetStatusByGroup("TypeOfInvestment"), "Value", "Name"), "Type of Investment", new { @class = "form-control" })
                </div>


                <div class="form-group">
                    @Html.DropDownListFor(model => model.Sector, new SelectList(StatusRepository.GetStatusByGroup("Sector"), "Value", "Name"), "Sector", new { @class = "form-control" })
                </div>


                <div class="form-group">
                    @Html.DropDownListFor(model => model.InvestingCountry, new SelectList(CountryRepository.GetCountries(), "ISO", "Name"), "Investing Country", new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true" })
                </div>

                <div class="form-group">
                    <div class='input-group date' id="datetimepickerFromDate" style="width:150px">
                        @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control", placeholder = "From Date" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>

                </div>

                <div class="form-group">
                    <div class='input-group date' id="datetimepickerToDate" style="width:150px">
                        @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control", placeholder = "To Date" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>

                </div>


                <div class="form-group">
                    <button type="submit" class="btn btn-search btn-info" formaction="InvestmentByRegion">
                        <span class="glyphicon glyphicon-search"></span>
                        <span class="label-icon">Search</span>
                    </button>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-search btn-info" formaction="InvestmentByRegionExport">
                        <span class="glyphicon glyphicon-list-alt"></span>
                        <span class="label-icon">Export</span>
                    </button>
                </div>
                }
            </div>
        </nav>
        <table class="table table-striped table-bordered table-list">
            <thead>
                <tr>

                    <th rowspan="2">
                        #
                    </th>
                    <th rowspan="2">
                        Region
                    </th>

                    @foreach (var sector in Model.Sectors)
                    {
                    <th colspan="2">
                        @Html.DisplayFor(model => sector.Name)
                    </th>
                    }
                </tr>
                <tr>
                    @foreach (var sector in Model.Sectors)
                    {
                    <th>
                        Amount
                    </th>
                    <th>
                        Qty
                    </th>
                    }
                </tr>
            </thead>
            <tbody>
                @{

                var rowNo = 1;
                foreach (var region in Model.Regions)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(model => rowNo)
                    </td>
                    <td style="width:25%">
                        @Html.DisplayFor(model => region)
                    </td>
                    @foreach (var sector in Model.Sectors)
                    {
                    var investment = Model.InvestmentByRegions.Where(i => i.Region == region && i.Sector == sector.Name).FirstOrDefault();
                    <td style="text-align:right">
                        @Html.DisplayFor(model => investment.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(model => investment.Quantity)
                    </td>
                    }
                </tr>
                rowNo++;
                }
                }
            </tbody>
        </table>
    </div>

</div>
@*}*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
        $(function () {
            $('#datetimepickerFromDate').datetimepicker({
                showTodayButton: true,
                format: 'MM/DD/YYYY',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top',
                stepping: 15
            });
            $('#datetimepickerToDate').datetimepicker({
                showTodayButton: true,
                format: 'MM/DD/YYYY',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top',
                stepping: 15,
                useCurrent: false //Important! See issue #1075
            });
            $("#datetimepickerFromDate").on("dp.change", function (e) {
                $('#datetimepickerToDate').data("DateTimePicker").minDate(e.date);
            });
            $("#datetimepickerToDate").on("dp.change", function (e) {
                $('#datetimepickerFromDate').data("DateTimePicker").maxDate(e.date);
            });
        });
</script>
}

